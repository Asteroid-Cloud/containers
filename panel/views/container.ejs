<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Manage Container</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="/panel.css" rel="stylesheet">
  <style>
    .file-list { font-family: monospace; background: #f8f9fa; padding: 1em; border-radius: 6px; }
    .file-actions { white-space: nowrap; }
    .file-row:hover { background: #f1f3f5; }
    .dir-row { font-weight: bold; }
  </style>
</head>
<body class="container py-4">
  <nav class="navbar navbar-expand-lg navbar-light bg-light mb-4">
    <a class="navbar-brand" href="/">Asteroid Panel</a>
    <div class="navbar-nav">
      <a class="nav-link" href="/">Dashboard</a>
      <a class="nav-link" href="/logout">Logout</a>
    </div>
  </nav>
  <h1>Manage: <%= container.name %></h1>
  <a href="/" class="btn btn-secondary mb-3">Back to Dashboard</a>
  <% if (error) { %>
    <div class="alert alert-danger"><%= error %></div>
  <% } %>
  <% if (about) { %>
    <h2>Instance Info</h2>
    <pre class="bg-light p-3 rounded"><%= JSON.stringify(about, null, 2) %></pre>
  <% } %>

  <h2>File Manager</h2>
  <form id="uploadForm" class="mb-3" enctype="multipart/form-data" onsubmit="return uploadFile(event)">
    <div class="row g-2 align-items-center">
      <div class="col-auto">
        <input type="file" class="form-control" id="uploadInput" required>
      </div>
      <div class="col-auto">
        <input type="text" class="form-control" id="uploadPath" placeholder="Path (e.g. folder/file.txt)" required>
      </div>
      <div class="col-auto">
        <button type="submit" class="btn btn-success">Upload</button>
      </div>
    </div>
    <div id="uploadResult" class="mt-2"></div>
  </form>

  <div id="fileManager"></div>

  <script>
    var containerIdx = '<%= idx %>';
    let currentDir = '';
    function fetchFiles(dir = '') {
      currentDir = dir;
      fetch(`/containers/` + containerIdx + `/files/list?dir=` + encodeURIComponent(dir))
        .then(function(r) { return r.json(); }).then(function(data) {
          if (!data.success) {
            document.getElementById('fileManager').innerHTML = `<div class='alert alert-danger'>${data.message}</div>`;
            return;
          }
          document.getElementById('fileManager').innerHTML = renderFileList(data.files, dir);
        });
    }
    function renderFileList(files, dir) {
      let html = `<div class='file-list'><b>Directory: /${dir}</b>`;
      if (dir) html += ` <button class='btn btn-sm btn-outline-secondary' onclick='fetchFiles("${dir.split('/').slice(0,-1).join('/')}")'>Up</button>`;
      html += `<table class='table table-sm mt-2'><thead><tr><th>Name</th><th>Type</th><th>Size</th><th>Actions</th></tr></thead><tbody>`;
      files.forEach(f => {
        if (f.type === 'directory') {
          html += `<tr class='dir-row'><td><a href='#' onclick='fetchFiles("${(dir ? dir + '/' : '') + f.name}")'>${f.name}/</a></td><td>dir</td><td></td><td></td></tr>`;
        } else {
          html += `<tr class='file-row'><td>${f.name}</td><td>file</td><td>${f.size}</td><td class='file-actions'>` +
            `<button class='btn btn-sm btn-danger' onclick='deleteFile("${(dir ? dir + '/' : '') + f.name}")'>Delete</button> ` +
            `<button class='btn btn-sm btn-warning' onclick='renameFilePrompt("${(dir ? dir + '/' : '') + f.name}")'>Rename</button>` +
            `</td></tr>`;
        }
      });
      html += `</tbody></table></div>`;
      return html;
    }
    function uploadFile(e) {
      e.preventDefault();
      const fileInput = document.getElementById('uploadInput');
      const relPath = document.getElementById('uploadPath').value;
      if (!fileInput.files.length || !relPath) return false;
      const file = fileInput.files[0];
      const reader = new FileReader();
      reader.onload = async function(ev) {
        const base64 = btoa(String.fromCharCode(...new Uint8Array(ev.target.result)));
        const res = await fetch(`/containers/${containerIdx}/files/upload`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ file: base64, path: relPath })
        });
        const data = await res.json();
        document.getElementById('uploadResult').innerHTML = data.success ? `<span class='text-success'>${data.message}</span>` : `<span class='text-danger'>${data.message}</span>`;
        fetchFiles(currentDir);
      };
      reader.readAsArrayBuffer(file);
      return false;
    }
    function deleteFile(path) {
      if (!confirm('Delete ' + path + '?')) return;
      fetch(`/containers/${containerIdx}/files/delete`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ path })
      }).then(r => r.json()).then(data => {
        fetchFiles(currentDir);
      });
    }
    function renameFilePrompt(oldPath) {
      const newName = prompt('Enter new name for ' + oldPath.split('/').pop() + ':');
      if (!newName) return;
      const newPath = oldPath.split('/').slice(0, -1).concat([newName]).join('/');
      fetch(`/containers/${containerIdx}/files/rename`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ oldPath, newPath })
      }).then(r => r.json()).then(data => {
        fetchFiles(currentDir);
      });
    }
    fetchFiles('');
  </script>
</body>
</html>
